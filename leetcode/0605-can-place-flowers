class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        int availablePlaces = 0;

        if (flowerbed.length == 1 && flowerbed[0] == 0) {
            return true;
        }

        for (int i = 1; i < flowerbed.length; i++) {
            // check for first two zeroes
            if (i == 1 && flowerbed[i] == 0 && flowerbed[i - 1] == 0) {
                flowerbed[i - 1] = 1;
                availablePlaces++;
            }
            // check for last two zeroes
            if (i == flowerbed.length - 1 && flowerbed[i] == 0 && flowerbed[i - 1] == 0) {
                flowerbed[i] = 1;
                availablePlaces++;
            }
            // check for three zeroes in line
            if (flowerbed[i - 1] == 0 && flowerbed[i] == 0 && flowerbed[i + 1] == 0) {
                flowerbed[i] = 1;
                availablePlaces++;
            }
        }

        return availablePlaces >= n;
    }
}